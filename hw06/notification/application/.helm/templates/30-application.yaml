apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.application.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: check-db-readiness
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.port | quote }}
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.application.image.repository }}:{{ .Values.application.image.tag }}
          imagePullPolicy: {{ .Values.application.image.pullPolicy }}
          env:
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  key: DATABASE_URI
                  name: {{ .Chart.Name }}-secret
            - name: APP_PORT
              value: {{ .Values.application.deployment.pod.port | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: JWT_SECRET
                  name: {{ .Chart.Name }}-secret
            - name: KAFKA_HOST
              value: {{ .Values.kafka.dns }}
          ports:
            - name: http
              containerPort: {{ .Values.application.deployment.pod.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              port: 80
              path: /health
            initialDelaySeconds: 2
            periodSeconds: 3
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              port: 80
              path: /health
            initialDelaySeconds: 2
            periodSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include ".helm.fullname" . }}
  labels:
  {{- include ".helm.labels" . | nindent 4 }}
spec:
  type: {{ .Values.application.service.type }}
  ports:
    - port: {{ .Values.application.service.port }}
      targetPort: {{ .Values.application.deployment.pod.port }}
      protocol: TCP
      name: http
  selector:
  {{- include ".helm.selectorLabels" . | nindent 4 }}