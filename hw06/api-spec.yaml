openapi: 3.0.0
info:
  contact:
    email: murod.haydarov@gmail.com
  title: Домашнее задание №6
  version: 0.1.0
tags:
  - name: identity
    description: Сервис работы с пользователем
  - name: billing
    description: Сервис биллинга
  - name: order
    description: Сервис для работы с заказами
  - name: notification
    description: Сервис нотификаций
paths:
  /auth/register:
    post:
      tags:
        - identity
      summary: Регистрация пользователя
      description: Регистрация пользователя. Создает аккаунт в сервисе биллинга
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: Регистрация прошла успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
  /auth/login:
    post:
      tags:
        - identitiy
      summary: Аутентификация пользователя
      description: Аутентифицирует пользователя, возвращает accessToken и refreshToken
      operationId: login
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
        '404':
          description: Такого пользователя нет
  /cards:
    post:
      tags:
        - loyalty
      summary: Заведение карты лояльности
      description: Метод для заведения и создания карты лояльности
      operationId: createLoyaltyCard
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              required:
                - userId
            example:
              userId: 42

      responses:
        '201':
          description: Заведение карты успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  cardNumber:
                    type: string
                    format: "XXXX-XXXX"
                  status:
                    type: string
              example:
                id: 42
                cardNumber: "1235-6892"
  /send_email:
    post:
      tags:
        - notification
      summary: Отослать email на почту
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                templateId:
                  type: integer
                context:
                  type: object
              required:
                - email
                - templateId
                - context
            example:
              email: "vasya@pupkin.ru"
              templateId: 42
              context:
                firstName: vasya
                lastName: pupkin
                loyaltyCardNumber: 1231-1231
      responses:
        '202':
          description: Отсылка взята в работу
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
              example:
                jobId: 000123234091234
components:
  schemas:
    User:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
            password:
              type: string
              format: uuid
      required:
        - id
        - password
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                login: johndoe589
                firstName: John
                lastName: Doe
      description: User object that needs to be created
      required: true