openapi: 3.0.0
info:
  contact:
    email: murod.haydarov@gmail.com
  title: Система размещения рекламы на сайтах
  version: 0.1.0
servers:
  - url: http://arch.homework
    description: Локальный сервер
security:
  - BearerAuth: []
tags:
  - name: users
    description: Пользователи
  - name: billing
    description: Биллинг
  - name: adverts
    description: Объявления
  - name: sites
    description: Веб-сайты
paths:
  /login:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Создает пользователя и аккаунт в сервисе биллинга
      requestBody:
        $ref: '#/components/requestBodies/SignUp'
      responses:
        200:
          description: Регистрация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
        400:
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                success: false
                message: 'user with email already exist'
                data: {}

  /signup:
    post:
      tags:
        - users
      summary: Аутентификация пользователя
      description: Аутентифицирует пользователя, возвращает accessToken и refreshToken
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        200:
          description: Пользователь аутентифицирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      refreshToken:
                        type: string
                        format: uuid
              example:
                accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzIjoxNjQ3ODY3NDkwLCJmaXJzdE5hbWUiOiJDcnV6IiwiaWQiOiIzYzc2YjY0Ny1kMzZkLTRkNWItYTZjZS1hN2NmMjRlMDk1MmUiLCJsYXN0TmFtZSI6IkdlcmxhY2gifQ.r7xZCr-E0AL0lP4Ms4CVGAzXouYyOVa5vhBqkzlwUUM'
                refreshToken: 'f2aabdea-3f1b-4cea-baac-62673065d05c'
        400:
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                message: 'invalid login/password or user does not exist'

  /billing/deposit:
    post:
      tags:
        - billing
      summary: 'Пополнение баланса'
      description: 'Пополняет баланс аккаунта в биллинге'
      security:
        - BearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/Deposit'
      responses:
        200:
          description: 'Баланс пополнен'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      transactionID:
                        type: string
              example:
                transactionID: 'f2aabdea-3f1b-4cea-baac-62673065d05c'
        400:
          description: 'Ошибка при пополнении баланса'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                message: 'Ошибка карты'

  /billing/withdraw:
    post:
      tags:
        - billing
      summary: 'Вывод денег на карту'
      description: 'Выводит деньги на карту'
      security:
        - BearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/Withdraw'
      responses:
        200:
          description: 'Деньги выведены на карту'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      transactionID:
                        type: string
              example:
                transactionID: 'f2aabdea-3f1b-4cea-baac-62673065d05c'
        400:
          description: 'Ошибка при выводе денег'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                message: 'Ошибка карты'

  /billing/balance:
    get:
      tags:
        - billing
      summary: 'Получение баланса'
      description: 'Получение баланса'
      security:
        - BearerAuth: []
      responses:
        200:
          description: 'Баланс выведен'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      balance:
                        type: integer
        401:
          description: 'Пользователь не авторизован'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /adverts:
    post:
      tags:
        - adverts
      summary: 'Создание объявления'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Advert'
      responses:
        200:
          description: 'Получено объявление'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      description:
                        type: string
                      link:
                        type: string
                      image:
                        type: string
                      devices:
                        type: string
                      dates:
                        type: string
                      hits:
                        type: integer
                      cost:
                        type: integer
        400:
          description: 'Ошибка запроса'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              example:
                error: 'Некорректные данные'
    get:
      tags:
        - adverts
      summary: 'Получение списка объявлений'
      description: ''
      security:
        - BearerAuth: []
      responses:
        200:
          description: 'Список получен'
          content:
            application/json:
              schema:
                type: array
                items:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          title:
                            type: string
                          description:
                            type: string
                          link:
                            type: string
                          image:
                            type: string
                          devices:
                            type: string
                          dates:
                            type: string
                          hits:
                            type: integer
                          cost:
                            type: integer

  /adverts/relevant:
    get:
      tags:
        - adverts
      summary: 'Получение объявления для открутки'
      responses:
        200:
          description: 'Объявление получено'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  title:
                    type: string
                  description:
                    type: string
                  link:
                    type: string
                  image:
                    type: string

  /sites:
    post:
      tags:
        - sites
      summary: 'Создание сайта'
      requestBody:
        $ref: '#/components/requestBodies/Site'
      responses:
        201:
          description: 'Сайт создан успешно'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      domains:
                        type: string

        400:
          description: 'Ошибка данных'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

    get:
      tags:
        - sites
      summary: 'Получение списка созданных сайтов'
      responses:
        200:
          description: 'Список получен'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      - type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          title:
                            type: string
                          domains:
                            type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    SignUp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                email: johndoe589@mail.com
                password: JohnsPassword
      description: User object that needs to be created
      required: true
    Login:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
          example:
            login: 'conor@mail.com'
            password: 'your-password'
    Deposit:
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
                type: integer
          example:
            amount: 1000
    Withdraw:
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
                type: integer
          example:
            amount: 1000
    Advert:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              link:
                type: string
              image:
                type: string
              devices:
                type: string
              dates:
                type: string
              hits:
                type: integer
              cost:
                type: integer
          example:
            dates: '21-06-2022,23-06-2022'
            devices: 'ios,android'
    Site:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              domains:
                type: string
          example:
            domains: 'localhost,otus.com'
